apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-platform
  namespace: deployment-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: deployment-platform
  template:
    metadata:
      labels:
        app.kubernetes.io/name: deployment-platform
        app.kubernetes.io/component: dashboard
    spec:
      containers:
      - name: dashboard
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: dashboard-content
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: dashboard-content
        configMap:
          name: deployment-platform-config
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: deployment-platform
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
          location / {
            root /usr/share/nginx/html;
            index appdeploy-dashboard.html;
            try_files $uri $uri/ /appdeploy-dashboard.html;
        }
        
        location /health {
            access_log off;
            return 200 "healthy\n";
        }
    }
